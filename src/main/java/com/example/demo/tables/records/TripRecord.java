/*
 * This file is generated by jOOQ.
 */
package com.example.demo.tables.records;


import com.example.demo.tables.Trip;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TripRecord extends UpdatableRecordImpl<TripRecord> implements Record6<Integer, Integer, Integer, LocalDateTime, LocalDateTime, Object> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.trip.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.trip.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.trip.train_id</code>.
     */
    public void setTrainId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.trip.train_id</code>.
     */
    public Integer getTrainId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.trip.route_id</code>.
     */
    public void setRouteId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.trip.route_id</code>.
     */
    public Integer getRouteId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.trip.start_time</code>.
     */
    public void setStartTime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.trip.start_time</code>.
     */
    public LocalDateTime getStartTime() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.trip.end_time</code>.
     */
    public void setEndTime(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.trip.end_time</code>.
     */
    public LocalDateTime getEndTime() {
        return (LocalDateTime) get(4);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public void setPrice(Object value) {
        set(5, value);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getPrice() {
        return get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Integer, Integer, LocalDateTime, LocalDateTime, Object> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, Integer, Integer, LocalDateTime, LocalDateTime, Object> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Trip.TRIP.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Trip.TRIP.TRAIN_ID;
    }

    @Override
    public Field<Integer> field3() {
        return Trip.TRIP.ROUTE_ID;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Trip.TRIP.START_TIME;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Trip.TRIP.END_TIME;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public Field<Object> field6() {
        return Trip.TRIP.PRICE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getTrainId();
    }

    @Override
    public Integer component3() {
        return getRouteId();
    }

    @Override
    public LocalDateTime component4() {
        return getStartTime();
    }

    @Override
    public LocalDateTime component5() {
        return getEndTime();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public Object component6() {
        return getPrice();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getTrainId();
    }

    @Override
    public Integer value3() {
        return getRouteId();
    }

    @Override
    public LocalDateTime value4() {
        return getStartTime();
    }

    @Override
    public LocalDateTime value5() {
        return getEndTime();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public Object value6() {
        return getPrice();
    }

    @Override
    public TripRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TripRecord value2(Integer value) {
        setTrainId(value);
        return this;
    }

    @Override
    public TripRecord value3(Integer value) {
        setRouteId(value);
        return this;
    }

    @Override
    public TripRecord value4(LocalDateTime value) {
        setStartTime(value);
        return this;
    }

    @Override
    public TripRecord value5(LocalDateTime value) {
        setEndTime(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public TripRecord value6(Object value) {
        setPrice(value);
        return this;
    }

    @Override
    public TripRecord values(Integer value1, Integer value2, Integer value3, LocalDateTime value4, LocalDateTime value5, Object value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TripRecord
     */
    public TripRecord() {
        super(Trip.TRIP);
    }

    /**
     * Create a detached, initialised TripRecord
     */
    public TripRecord(Integer id, Integer trainId, Integer routeId, LocalDateTime startTime, LocalDateTime endTime, Object price) {
        super(Trip.TRIP);

        setId(id);
        setTrainId(trainId);
        setRouteId(routeId);
        setStartTime(startTime);
        setEndTime(endTime);
        setPrice(price);
        resetChangedOnNotNull();
    }
}
