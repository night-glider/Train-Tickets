/*
 * This file is generated by jOOQ.
 */
package com.example.demo.tables.records;


import com.example.demo.tables.Route;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.YearToSecond;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RouteRecord extends UpdatableRecordImpl<RouteRecord> implements Record4<Integer, String, String, YearToSecond> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.route.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.route.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.route.start_city</code>.
     */
    public void setStartCity(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.route.start_city</code>.
     */
    public String getStartCity() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.route.finish_city</code>.
     */
    public void setFinishCity(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.route.finish_city</code>.
     */
    public String getFinishCity() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.route.trip_time</code>.
     */
    public void setTripTime(YearToSecond value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.route.trip_time</code>.
     */
    public YearToSecond getTripTime() {
        return (YearToSecond) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, YearToSecond> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, String, YearToSecond> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Route.ROUTE.ID;
    }

    @Override
    public Field<String> field2() {
        return Route.ROUTE.START_CITY;
    }

    @Override
    public Field<String> field3() {
        return Route.ROUTE.FINISH_CITY;
    }

    @Override
    public Field<YearToSecond> field4() {
        return Route.ROUTE.TRIP_TIME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getStartCity();
    }

    @Override
    public String component3() {
        return getFinishCity();
    }

    @Override
    public YearToSecond component4() {
        return getTripTime();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getStartCity();
    }

    @Override
    public String value3() {
        return getFinishCity();
    }

    @Override
    public YearToSecond value4() {
        return getTripTime();
    }

    @Override
    public RouteRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public RouteRecord value2(String value) {
        setStartCity(value);
        return this;
    }

    @Override
    public RouteRecord value3(String value) {
        setFinishCity(value);
        return this;
    }

    @Override
    public RouteRecord value4(YearToSecond value) {
        setTripTime(value);
        return this;
    }

    @Override
    public RouteRecord values(Integer value1, String value2, String value3, YearToSecond value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RouteRecord
     */
    public RouteRecord() {
        super(Route.ROUTE);
    }

    /**
     * Create a detached, initialised RouteRecord
     */
    public RouteRecord(Integer id, String startCity, String finishCity, YearToSecond tripTime) {
        super(Route.ROUTE);

        setId(id);
        setStartCity(startCity);
        setFinishCity(finishCity);
        setTripTime(tripTime);
        resetChangedOnNotNull();
    }
}
